{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","id","className","map","tab","title","isCurrentTabSelected","classNames","href","onClick","content","App","useState","setSelectedTab","tabClicked","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,qBAAGC,KAAgBJ,MAAkBD,EAAK,GAExE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAC,GACR,IAAQH,EAAcG,EAAdH,GAAII,EAAUD,EAAVC,MACNC,EAAuBL,IAAOF,EAAYE,GAEhD,OACE,oBACEC,UAAWK,IAAW,CACpB,YAAaD,IAEf,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMP,GACV,UAAQ,UACRQ,QAAS,kBAAMH,GAAwBR,EAAcM,IAHvD,SAKGC,KAPEJ,UAef,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBACGH,QADH,IACGA,OADH,EACGA,EAAaW,cCxCTd,EAAc,CACzB,CAAEK,GAAI,QAASI,MAAO,QAASK,QAAS,eACxC,CAAET,GAAI,QAASI,MAAO,QAASK,QAAS,eACxC,CAAET,GAAI,QAASI,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOG,EAAP,KAAoBc,EAApB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBH,EAAYM,SAGlC,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeE,EAAYE,GAC3BH,cAboB,SAACgB,GACzBD,EAAeC,UCdnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3f067150.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n            const isCurrentTabSelected = id === selectedTab.id;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': isCurrentTabSelected,\n                })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => isCurrentTabSelected || onTabSelected(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const changeSelectedTab = (tabClicked: Tab) => {\n    setSelectedTab(tabClicked);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={changeSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}