{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","id","isSelectedTabExists","undefined","className","map","tab","title","isCurrentTabSelected","isCurrentTabFirst","activeCondition","classNames","href","onClick","content","App","useState","setSelectedTabId","tabClicked","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,qBAAGC,KAAgBJ,KAC3CK,OACwCC,IADlBP,EACzBI,MAAK,qBAAGC,KAAgBJ,KAE3B,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAC,GACR,IAAQL,EAAcK,EAAdL,GAAIM,EAAUD,EAAVC,MACNC,EAAuBP,IAAOJ,EAC9BY,EAAoBR,IAAOL,EAAK,GAAGK,GACnCS,GAAoBR,GAAuBO,GAC7CP,GAAuBM,EAE3B,OACE,oBACEJ,UAAWO,IAAW,CACpB,YAAaD,IAEf,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMX,GACV,UAAQ,UACRY,QAAS,kBAAML,GAAwBV,EAAcQ,IAHvD,SAKGC,KAPEN,UAef,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,gBACGL,QADH,IACGA,OADH,EACGA,EAAae,cC7CTlB,EAAc,CACzB,CAAEK,GAAI,QAASM,MAAO,QAASO,QAAS,eACxC,CAAEb,GAAI,QAASM,MAAO,QAASO,QAAS,eACxC,CAAEb,GAAI,QAASM,MAAO,QAASO,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASpB,EAAK,GAAGK,IAA3D,mBAAOJ,EAAP,KAAsBoB,EAAtB,KAMA,OACE,sBAAKb,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBR,EAAKI,MAAK,qBAAGC,KAAgBJ,YADnD,aACsB,EAA6CU,SAGnE,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,cAboB,SAACoB,GACzBD,EAAiBC,EAAWjB,WCdhCkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e0d7f272.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(({ id }) => id === selectedTabId);\n  const isSelectedTabExists = tabs\n    .find(({ id }) => id === selectedTabId) !== undefined;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n            const isCurrentTabSelected = id === selectedTabId;\n            const isCurrentTabFirst = id === tabs[0].id;\n            const activeCondition = (!isSelectedTabExists && isCurrentTabFirst)\n            || (isSelectedTabExists && isCurrentTabSelected);\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': activeCondition,\n                })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => isCurrentTabSelected || onTabSelected(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const changeSelectedTab = (tabClicked: Tab) => {\n    setSelectedTabId(tabClicked.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(({ id }) => id === selectedTabId)?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={changeSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}